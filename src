import sqlite3
import tkinter as tk
from tkinter import messagebox

# Função para conectar ao banco de dados
def connect_db():
    conn = sqlite3.connect('biblioteca.db')
    cursor = conn.cursor()
    return conn, cursor

# Função para adicionar autor
def add_autor():
    nome = entry_nome_autor.get()
    nacionalidade = entry_nacionalidade_autor.get()
    conn, cursor = connect_db()
    cursor.execute('INSERT INTO Autores (Nome, Nacionalidade) VALUES (?, ?)', (nome, nacionalidade))
    conn.commit()
    conn.close()
    messagebox.showinfo('Sucesso', 'Autor adicionado com sucesso!')
    entry_nome_autor.delete(0, tk.END)
    entry_nacionalidade_autor.delete(0, tk.END)

# Função para adicionar livro
def add_livro():
    titulo = entry_titulo_livro.get()
    autor_nome = entry_autor_nome.get()
    ano = entry_ano_livro.get()
    genero = entry_genero_livro.get()
    conn, cursor = connect_db()

    cursor.execute('SELECT ID FROM Autores WHERE Nome = ?', (autor_nome,))
    autor_id = cursor.fetchone()
    
    if autor_id:
        cursor.execute('INSERT INTO Livros (Titulo, AutorID, AnoPublicacao, Genero) VALUES (?, ?, ?, ?)', 
                       (titulo, autor_id[0], ano, genero))
        conn.commit()
        messagebox.showinfo('Sucesso', 'Livro adicionado com sucesso!')
    else:
        messagebox.showerror('Erro', 'Autor não encontrado!')
    
    conn.close()
    entry_titulo_livro.delete(0, tk.END)
    entry_autor_nome.delete(0, tk.END)
    entry_ano_livro.delete(0, tk.END)
    entry_genero_livro.delete(0, tk.END)

# Função para adicionar empréstimo
def add_emprestimo():
    titulo_livro = entry_titulo_livro_emp.get()
    data_emp = entry_data_emp.get()
    data_dev = entry_data_dev.get()
    usuario = entry_nome_usuario.get()
    conn, cursor = connect_db()

    cursor.execute('SELECT ID FROM Livros WHERE Titulo = ?', (titulo_livro,))
    livro_id = cursor.fetchone()

    if livro_id:
        cursor.execute('INSERT INTO Emprestimos (LivroID, DataEmprestimo, DataDevolucao, NomeUsuario) VALUES (?, ?, ?, ?)', 
                       (livro_id[0], data_emp, data_dev, usuario))
        conn.commit()
        messagebox.showinfo('Sucesso', 'Empréstimo adicionado com sucesso!')
    else:
        messagebox.showerror('Erro', 'Livro não encontrado!')
    
    conn.close()
    entry_titulo_livro_emp.delete(0, tk.END)
    entry_data_emp.delete(0, tk.END)
    entry_data_dev.delete(0, tk.END)
    entry_nome_usuario.delete(0, tk.END)

# Funções de visualização e pesquisa
def view_autores():
    conn, cursor = connect_db()
    cursor.execute('SELECT * FROM Autores')
    autores = cursor.fetchall()
    conn.close()
    autores_list.delete(0, tk.END)
    for autor in autores:
        autores_list.insert(tk.END, autor)

def search_autor():
    nome = entry_pesquisa_autor.get()
    conn, cursor = connect_db()
    cursor.execute('SELECT * FROM Autores WHERE Nome LIKE ?', ('%' + nome + '%',))
    autores = cursor.fetchall()
    conn.close()
    autores_list.delete(0, tk.END)
    if autores:
        for autor in autores:
            autores_list.insert(tk.END, autor)
    else:
        autores_list.insert(tk.END, 'Nenhum autor encontrado!')

def view_livros():
    conn, cursor = connect_db()
    cursor.execute('SELECT * FROM Livros')
    livros = cursor.fetchall()
    conn.close()
    livros_list.delete(0, tk.END)
    for livro in livros:
        livros_list.insert(tk.END, livro)

def search_livros():
    keyword = entry_pesquisa_livro.get()
    conn, cursor = connect_db()
    cursor.execute('SELECT * FROM Livros WHERE Titulo LIKE ? OR Genero LIKE ?', 
                   ('%' + keyword + '%', '%' + keyword + '%'))
    livros = cursor.fetchall()
    conn.close()
    livros_list.delete(0, tk.END)
    if livros:
        for livro in livros:
            livros_list.insert(tk.END, livro)
    else:
        livros_list.insert(tk.END, 'Nenhum livro encontrado!')

def view_emprestimos():
    conn, cursor = connect_db()
    cursor.execute('SELECT * FROM Emprestimos')
    emprestimos = cursor.fetchall()
    conn.close()
    emprestimos_list.delete(0, tk.END)
    for emp in emprestimos:
        emprestimos_list.insert(tk.END, emp)

def search_emprestimos():
    usuario = entry_pesquisa_emprestimo.get()
    conn, cursor = connect_db()
    cursor.execute('SELECT * FROM Emprestimos WHERE NomeUsuario LIKE ?', 
                   ('%' + usuario + '%',))
    emprestimos = cursor.fetchall()
    conn.close()
    emprestimos_list.delete(0, tk.END)
    if emprestimos:
        for emp in emprestimos:
            emprestimos_list.insert(tk.END, emp)
    else:
        emprestimos_list.insert(tk.END, 'Nenhum empréstimo encontrado!')

# Interface gráfica com Tkinter
root = tk.Tk()
root.title('Sistema de Biblioteca')

# Frame para adicionar autores
frame_autor = tk.LabelFrame(root, text='Adicionar Autor')
frame_autor.grid(row=0, column=0, padx=10, pady=10)

tk.Label(frame_autor, text='Nome:').grid(row=0, column=0)
entry_nome_autor = tk.Entry(frame_autor)
entry_nome_autor.grid(row=0, column=1)

tk.Label(frame_autor, text='Nacionalidade:').grid(row=1, column=0)
entry_nacionalidade_autor = tk.Entry(frame_autor)
entry_nacionalidade_autor.grid(row=1, column=1)

tk.Button(frame_autor, text='Adicionar Autor', command=add_autor).grid(row=2, columnspan=2, pady=5)

# Frame para adicionar livros
frame_livro = tk.LabelFrame(root, text='Adicionar Livro')
frame_livro.grid(row=1, column=0, padx=10, pady=10)

tk.Label(frame_livro, text='Título:').grid(row=0, column=0)
entry_titulo_livro = tk.Entry(frame_livro)
entry_titulo_livro.grid(row=0, column=1)

tk.Label(frame_livro, text='Nome do Autor:').grid(row=1, column=0)
entry_autor_nome = tk.Entry(frame_livro)
entry_autor_nome.grid(row=1, column=1)

tk.Label(frame_livro, text='Ano Publicação:').grid(row=2, column=0)
entry_ano_livro = tk.Entry(frame_livro)
entry_ano_livro.grid(row=2, column=1)

tk.Label(frame_livro, text='Gênero:').grid(row=3, column=0)
entry_genero_livro = tk.Entry(frame_livro)
entry_genero_livro.grid(row=3, column=1)

tk.Button(frame_livro, text='Adicionar Livro', command=add_livro).grid(row=4, columnspan=2, pady=5)

# Frame para adicionar empréstimos
frame_emprestimo = tk.LabelFrame(root, text='Adicionar Empréstimo')
frame_emprestimo.grid(row=2, column=0, padx=10, pady=10)

tk.Label(frame_emprestimo, text='Título do Livro:').grid(row=0, column=0)
entry_titulo_livro_emp = tk.Entry(frame_emprestimo)
entry_titulo_livro_emp.grid(row=0, column=1)

tk.Label(frame_emprestimo, text='Data Empréstimo:').grid(row=1, column=0)
entry_data_emp = tk.Entry(frame_emprestimo)
entry_data_emp.grid(row=1, column=1)

tk.Label(frame_emprestimo, text='Data Devolução:').grid(row=2, column=0)
entry_data_dev = tk.Entry(frame_emprestimo)
entry_data_dev.grid(row=2, column=1)

tk.Label(frame_emprestimo, text='Nome Usuário:').grid(row=3, column=0)
entry_nome_usuario = tk.Entry(frame_emprestimo)
entry_nome_usuario.grid(row=3, column=1)

tk.Button(frame_emprestimo, text='Adicionar Empréstimo', command=add_emprestimo).grid(row=4, columnspan=2, pady=5)

# Frame para visualizar e buscar autores
frame_visualizar_autores = tk.LabelFrame(root, text='Visualizar Autores')
frame_visualizar_autores.grid(row=0, column=1, padx=10, pady=10)

autores_list = tk.Listbox(frame_visualizar_autores, height=10, width=50)
autores_list.grid(row=0, column=0, columnspan=2)
tk.Button(frame_visualizar_autores, text='Visualizar Todos os Autores', command=view_autores).grid(row=1, column=0)

tk.Label(frame_visualizar_autores, text='Nome do Autor:').grid(row=2, column=0)
entry_pesquisa_autor = tk.Entry(frame_visualizar_autores)
entry_pesquisa_autor.grid(row=2, column=1)

tk.Button(frame_visualizar_autores, text='Buscar Autor', command=search_autor).grid(row=3, column=0, columnspan=2, pady=5)

# Frame para visualizar livros e buscar
frame_visualizar_livros = tk.LabelFrame(root, text='Visualizar Livros e Empréstimos')
frame_visualizar_livros.grid(row=1, column=1, padx=10, pady=10)

livros_list = tk.Listbox(frame_visualizar_livros, height=10, width=50)
livros_list.grid(row=0, column=0)
tk.Button(frame_visualizar_livros, text='Visualizar Livros', command=view_livros).grid(row=1, column=0)

# Pesquisa de livros
tk.Label(frame_visualizar_livros, text='Palavra-chave ou Gênero:').grid(row=2, column=0)
entry_pesquisa_livro = tk.Entry(frame_visualizar_livros)
entry_pesquisa_livro.grid(row=2, column=1)

tk.Button(frame_visualizar_livros, text='Buscar Livros', command=search_livros).grid(row=3, column=0, columnspan=2, pady=5)

# Empréstimos
emprestimos_list = tk.Listbox(frame_visualizar_livros, height=10, width=50)
emprestimos_list.grid(row=4, column=0)
tk.Button(frame_visualizar_livros, text='Visualizar Empréstimos', command=view_emprestimos).grid(row=5, column=0)

# Pesquisa de empréstimos
tk.Label(frame_visualizar_livros, text='Nome do Usuário:').grid(row=6, column=0)
entry_pesquisa_emprestimo = tk.Entry(frame_visualizar_livros)
entry_pesquisa_emprestimo.grid(row=6, column=1)

tk.Button(frame_visualizar_livros, text='Buscar Empréstimos', command=search_emprestimos).grid(row=7, column=0, columnspan=2, pady=5)

root.mainloop()
